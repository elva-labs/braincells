AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  storage-first

Globals:
  Function:
    Timeout: 3
    MemorySize: 256
    LoggingConfig:
      LogFormat: JSON
    CodeUri: ./
    Handler: bootstrap
    Runtime: provided.al2
    Architectures:
      - arm64

Resources:
  StorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-storage"

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        openapi: "3.0.1"
        info:
          title:
            Ref: AWS::StackName
          version: "1.0"
        paths:
          /{object}:
            put:
              summary: Upload an object to S3
              parameters:
                - name: object
                  in: path
                  required: true
                  schema:
                    type: string
              requestBody:
                content:
                  application/octet-stream:
                    schema:
                      type: string
                      format: binary
              responses:
                "200":
                  description: Successful upload
              x-amazon-apigateway-integration:
                credentials: !GetAtt S3AccessRole.Arn
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:s3:path/${AWS::StackName}-storage/{object}"
                responses:
                  default:
                    statusCode: 200
                requestParameters:
                  integration.request.path.object: method.request.path.object
                passthroughBehavior: when_no_match
                httpMethod: PUT
                type: aws

  S3AccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${StorageBucket}/*"

  BucketNotificationFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: rust-cargolambda
      BuildProperties:
        Binary: notification
    Properties:
      Events:
        S3ObjectCreated:
          Type: S3
          Properties:
            Bucket: !Ref StorageBucket
            Events: s3:ObjectCreated:*
      Policies:
        - S3ReadPolicy:
            BucketName: !Sub "${AWS::StackName}-storage"

Outputs:
  ApiUrl:
    Description: URL of your API endpoint
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
